---
title: "Stat331: FinalProject"
author: "Alea Seifert, Robelyn Felices, Franchesca Garcia, and Libby Brill"
embed-resources: true
format: 
  html:
    self-contained: true
    code-tools: true
    toc: true
editor: source
code-fold: true
execute: 
  error: true
  echo: true
  message: false
  warning: false
---

## Introduction

#### Data Description

For our final project, we chose to focus on CO2 emissions per capita and life expectancy. We use data sets taken from Gapminder, which have been combined and collected from a variety of sources. The co2_emissions data set contains 194 observations (countries) with 224 variables (ranging in year from 1800 to 2022). These data represent the recorded consumption-based CO2 emissions, in tonnes of CO2 per capita. The life_expectancy data set contains 195 observations (countries) with 302 variables (ranging in year from 1800 to 2100). These data represent the number of years a newborn infant would live assuming the mortality rate at their birth remains constant throughout their life.

#### Data Cleaning

```{r setup}
# load in data
library(tidyverse)
```

```{r data}
# Data
co2_emissions <- read_csv(here::here("co2_pcap_cons.csv"))
life_expectancy <- read_csv(here::here("lex.csv"))

# Pivoting Longer
co2_emissions_long <- co2_emissions |>
  mutate(across(`1800`:`2022`, ~ str_replace_all(.x, "âˆ’", "-"))) |>
  mutate(across(`1800`:`2022`, ~ as.numeric(.x))) |>
  pivot_longer(
    cols = `1800`:`2022`,
    names_to = "year",
    values_to = "co2"
  )

life_exp_long <- life_expectancy |>
  mutate(across(`1800`:`2100`, ~ as.numeric(.x))) |>
  pivot_longer(
    cols = `1800`:`2100`,
    names_to = "year",
    values_to = "life_exp"
  )

# Join Datasets
project_data <- co2_emissions_long |>
  inner_join(life_exp_long,
    by = c("country", "year")
  ) |>
  mutate(year = as.numeric(year))

```

When downloading our desired data sets, CO2 emissions per capita and life expectancy we received some warnings during our attempts to pivot our data sets. We came to learn that R was reading in the negative dashes as character variables as opposed to numeric, specifically in our CO2 emissions data.

To fix this issue, our group utilized `str_replace_all` (string replace) in order to replace the character variable with negative signs. This process was only applied for the CO2 emissions data.

We applied as.numeric for both data sets, and lastly pivoted long each data to receive our variables country, year and the data collected per data set.

#### Hypothesized Relationship

In our model we will analyze CO2 emissions as the explanatory variable and life expectancy as the response variable. We expect a negative relationship between CO2 emissions and life expectancy, where countries that produce greater amounts of C02 tend to have lower life expectancy. We assume C02 emissions decrease air quality and cause respiratory issues, decreasing life expectancy.

## Linear Regression Analysis

#### Data Visualization

```{r}
# Visualization 1:
library(gganimate)
animated <- project_data |>
  ggplot(aes(x = co2, 
             y = life_exp)) +
  geom_point(alpha = 0.7, show.legend = FALSE,
             na.rm = TRUE) +
  labs(title = "Year: {round(frame_time)}",
       x = "CO2 Emmisions",
       y = "Life Expectancy") +
  transition_time(year) +
  ease_aes("linear") +
  theme_bw()

animate(animated, renderer = gifski_renderer(), fps = 7)

# Visualization 2:
project_data |>
  group_by(country) |>
  summarize(avg_co2 = mean(co2),
            avg_life_exp = mean(life_exp)
            ) |>
  ggplot(mapping = aes(x = avg_co2,
                       y = avg_life_exp)
         ) +
  geom_point(alpha = 0.7,
             na.rm = TRUE) +
  labs(title = "Averge CO2 Emmisions and Life Expectancy per Country",
       x = "Average CO2 Emmisions",
       y = "",
       subtitle = "Average Life Expectancy") +
  theme_bw()
```

#### Linear Regression Model
<<<<<<< HEAD
```{r}
project_lm <- project_data |>
  group_by(country) |>
  summarize(avg_co2 = mean(co2),
            avg_life_exp = mean(life_exp))

project_lm <- lm(avg_life_exp ~ avg_co2,
               data = project_lm)
broom::tidy(project_lm)
=======

```{r}
project_lm <- lm(life_exp ~ co2,
               data = project_data)
>>>>>>> 3400c16e0bb7e68fef8548ac24978c33c6755a7b
```

#### Model Fit

```{r}
residuals <- broom::augment(project_lm) 

  ggplot(residuals, aes(x = .fitted, y = .resid)) +
  geom_jitter() + 
  geom_smooth(method = "lm")
  
residuals
```
